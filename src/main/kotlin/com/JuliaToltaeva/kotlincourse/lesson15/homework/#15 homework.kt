package com.juliatoltaeva.com.JuliaToltaeva.kotlincourse.lesson15.homework

import com.juliatoltaeva.com.JuliaToltaeva.kotlincourse.lesson15.classwork.Car

fun main() {
    val party = Party("Место X", 55)
    party.details()

    val emotion = Emotion("type", 5)
    emotion.express()

    val moon = MoonPhase(true, MoonPhase.phaseList[0])
    moon.showPhase()

    val concert = Concert(
        Concert.group,
        Concert.place,
        Concert.price,
        true)
    concert.getInfoConcert()
    concert.buyTicket()

}



//Дополнительное задание: Работа со Стеллажами и Полками
//Цель Задания
//Создать систему управления складским пространством с использованием
// классов "Стеллаж" и "Полка стеллажа".
//Класс Shelf (Полка Стеллажа)
//Характеристики:
//Вместимость полки (capacity): максимальная сумма букв всех названий предметов,
// которые могут быть размещены на полке.
//Список предметов (items): хранит названия предметов на полке.
//Методы:
//Добавление Предмета (addItem):
//Принимает название предмета.
//Проверяет, поместится ли предмет на полку, учитывая длину его
// названия и текущее заполнение полки.
//Возвращает true и добавляет предмет, если есть место. В противном случае возвращает false.
//Удаление Предмета (removeItem):
//Принимает название предмета.
//Удаляет предмет, если он найден на полке.
//Возвращает true, если предмет был удален, и false, если такой предмет не найден.
//Проверка Вместимости (canAccommodate):
//Принимает название предмета.
//Определяет, вместится ли предмет на полку.
//Возвращает true, если предмет вместится, и false, если места недостаточно.
//Проверка наличия предмета:
//Принимает название предмета
//Возвращает true если такой предмет есть
//Получение списка предметов:
//Возвращает неизменяемый список предметов
//Класс Rack (Стеллаж)
//Характеристики:
//Список полок (shelves): хранит полки стеллажа.
//Максимальное количество полок.
//Методы:
//Добавление Полки (addShelf):
//Добавляет новую полку в стеллаж.
//Возвращает true, если полка была успешно добавлена или false если стеллаж уже заполнен или была попытка добавить полку которая уже установлена.
//Удаление Полки (removeShelf):
//Принимает индекс полки для удаления.
//Удаляет полку по указанному индексу.
//Возвращает true, если полка была успешно удалена или false если она не существует.
//Добавление Предмета (addItem):
//Добавляет предмет на самую свободную полку.
//Возвращает true, если предмет успешно добавлен, и false, если на всех полках недостаточно места.
//Удаление Предмета (removeItem):
//Находит и удаляет предмет с любой полки.
//Возвращает true, если предмет был удален, и false, если такой предмет не найден.
//Проверка наличия предмета на полке:
//Возвращает true если предмет есть на одной из полок
//Получение списка полок:
//Возвращает неизменяемый список полок
//Печать Содержимого (printContents):
//Выводит в консоль информацию о каждой полке: индекс, вместимость, оставшуюся вместимость, список предметов. Информацию выводить в наглядном читаемом виде
//Сложное удаление полки (advancedRemoveShelf):
//Принимает индекс полки для удаления
//Перераспределяет предметы по имеющимся полкам, начиная с самых длинных. Если очередной предмет никуда не вмещается, его нужно пропустить и попробовать разместить следующий.
//Удаляет полку с оставшимися предметами
//Возвращает список предметов, которые не удалось удалить
//Для усложнения, вместо предметов-слов создать класс предмета с названием и занимаемым размером.
