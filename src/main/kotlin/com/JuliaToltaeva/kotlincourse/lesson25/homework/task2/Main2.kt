package com.juliatoltaeva.com.JuliaToltaeva.kotlincourse.lesson25.homework.task2


//Задание 2. Создай функцию, которая принимает список чисел и возвращает среднее
// арифметическое этого списка. С помощью require проверь, что список не пустой.

//Проверь, что лямбда выражение работает правильно с помощью нескольких наборов
// данных (в том числе пустого).

fun func20(list: List<Int>): Double {

    require(list.isNotEmpty()) { "Пустой список" }
    return list.average()

}

fun main() {

    //Создай аналогичную анонимную функцию.

    val func21 = fun(list: List<Int>): Double {

        require(list.isNotEmpty()) { "Пустой список" }
        return list.average()

    }

    //Создай аналогичное лямбда выражение с указанием типа.

    val func22: (List<Int>) -> Double = { list ->

        require(list.isNotEmpty()) { "Пустой список" }
        list.average()

    }


    //Создай лямбда выражение без указания типа.

    val func23 = { list: List<Int> ->
        require(list.isNotEmpty()) { "Пустой список" }
        list.average()
    }


    println(func20(listOf(0, 1, 2, 3, 4)))
    println(func21(listOf(0, 1, 2, 3, 4)))
    println(func22(listOf(0, 1, 2, 3, 4)))


}


//Задание 3. Создай функцию, которая принимает список строк и число, а возвращает
// список из строк, длина которых больше или равна заданному числу. Если список
// пуст, нужно выкинуть исключение.
//По аналогии с предыдущим заданием выполни трансформации и проверки.

//Задание 4. Создай функцию, которая принимает большое число и возвращает сумму
// цифр этого числа.
//По аналогии с предыдущим заданием выполни трансформации и проверки.
//Подсказка: для парсинга строки “3” в число 3 можно использовать “3”.digitToInt()

//Задание 5. Создай функцию расширение списка чисел, которая будет возвращать список
// уникальных чисел (без дубликатов).
//Создай аналогичную анонимную функцию.
//Создай аналогичное лямбда выражение с указанием типа.
//Проверь, что лямбда выражение работает правильно с помощью нескольких наборов данных.

//Задание 6. Создай функцию расширение словаря из строк и чисел, которая принимает
// число и возвращает список ключей, длина которых меньше их значений но больше
// заданного в функции аргумента. В случае если список получается пустой нужно
// выкинуть исключение IllegalState.
//По аналогии с предыдущим заданием выполни трансформации и проверки.

//Задание 7. Создай функцию расширения словаря из списка и множества, которая
// принимает все известные тебе типы (вспомни все что знаешь и под каждый тип создай
// аргумент) и возвращает строку. Функция должна распечатать все данные, которые
// тебе в ней доступны и вернуть конкатенацию всех данных которые ей доступны
// (порядок неважен). Конкатенация - это присоединение. Код должен быть отформатирован
// таким образом, чтобы легко читался.
//По аналогии с предыдущим заданием выполни трансформации.
